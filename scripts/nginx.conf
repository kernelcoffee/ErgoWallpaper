# ERGOWALLPAPER
# Maintainer: @kernelcoffee
# App Version: 0.1

upstream ergowallpaper {
  server unix:/tmp/unicorn.ergowallpaper.socket fail_timeout=0;
}

# FU NSA SSL 4096 everywhere !
server {
    listen      80;
    server_name server_address;
    rewrite     ^   https://$server_name$request_uri? permanent;
}


# SSL is good for you and brings back loved ones under 24h
server {
  listen *:443 ssl;                   # e.g., listen 192.168.1.1:80; In most cases *:80 is a good idea
  server_name YOUR_SERVER_FQDN;       # e.g., server_name source.example.com;
  server_tokens off;                  # don't show the version number, a security best practice
  root /path/to/ergowallpaper/public;

  ssl on;
  ssl_certificate /path/to/certs/ssl.crt;
  ssl_certificate_key /path/to/ssl/certs/ssl.key;
  ssl_session_timeout  5m;


  # individual nginx logs for this ergowallpaper vhost
  access_log  /var/log/nginx/ergowallpaper_access.log;
  error_log   /var/log/nginx/ergowallpaper_error.log;
 

  error_page 500 502 503 504 /500.html;
  client_max_body_size 4G;
  keepalive_timeout 10;


  # use alias in ssl otherwise it doesn't forward the files
  location ^~ /assets/ {
    alias /path/to/ergowallpaper/public/assets/;
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  location /uploads {
    alias /path/to/ergowallpaper/public/uploads;
    access_log        off;
    expires           30d;
  }
  
  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  location / {
    # serve static files from defined root folder;.
    # @ergowallpaper is a named location for the upstream fallback, see below
    try_files $uri $uri/index.html $uri.html @ergowallpaper;
  }

  # if a file, which is not found in the root folder is requested,
  # then the proxy pass the request to the upsteam (ergowallpeper unicorn)
  location @ergowallpaper {
    proxy_pass http://ergowallpaper;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}
